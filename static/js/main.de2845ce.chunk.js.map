{"version":3,"sources":["components/FriendCard/index.js","components/Score/index.js","components/NavBar/index.js","App.js","index.js"],"names":["FriendCard","props","className","src","image","id","onClick","shuffleScoreCard","alt","name","Score","total","status","NavBar","class","href","App","state","friends","clickedFriendIds","score","goal","includes","setState","push","length","console","log","i","j","Math","floor","random","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"mkCAWeA,MARf,SAAoBC,GAClB,OACA,yBAAKC,UAAU,4BACb,yBAAKC,IAAKF,EAAMG,MAAOC,GAAIJ,EAAMI,GAC/BC,QAAS,kBAAML,EAAMM,iBAAiBN,EAAMI,KAAMH,UAAU,eAAeM,IAAKP,EAAMQ,SCG7EC,G,MAPD,SAAAT,GAAK,OACjB,yBAAKC,UAAU,aACb,wBAAIA,UAAY,SAAhB,eAAqCD,EAAMU,OAC3C,wBAAIT,UAAU,UAAd,iBAAsCD,EAAMW,W,MCajCC,MAhBf,WACE,OACE,yBAAKX,UAAU,aACb,yBAAKY,MAAM,uBACT,uBAAGA,MAAM,eAAeT,GAAG,SAASU,KAAK,KAAzC,uBAEF,yBAAKb,UAAU,aACb,iDACA,qH,OC0DOc,G,gNA5DbC,MAAQ,CACNC,UACAC,iBAAkB,GAClBC,MAAO,EACPC,KAAM,GACNT,OAAQ,I,EAIVL,iBAAmB,SAAAF,GACjB,IAAIc,EAAmB,EAAKF,MAAME,iBAClC,GAAGA,EAAiBG,SAASjB,GAC3B,EAAKkB,SAAU,CAAEJ,iBAAkB,GAAIC,MAAO,EAAGR,OAAQ,mBAItD,CAEH,GADAO,EAAiBK,KAAKnB,GACS,KAA5Bc,EAAiBM,OAGlB,OAFA,EAAKF,SAAS,CAACH,MAAO,GAAIR,OAAQ,WAAYO,iBAAkB,UAChEO,QAAQC,IAAI,WAIb,EAAKJ,SAAS,CAAEL,UAASC,mBAAkBC,MAAOD,EAAiBM,OAAQb,OAAQ,MACnF,IAAK,IAAIgB,EAAIV,EAAQO,OAAS,EAAGG,EAAI,EAAGA,IAAK,CAC3C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADG,EAEhB,CAACV,EAAQW,GAAIX,EAAQU,IAA/CV,EAAQU,GAFkC,KAE9BV,EAAQW,GAFsB,Q,wEAQxC,IAAD,OACP,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOlB,MAAOsB,KAAKhB,MAAMG,MACjBC,KAAM,GACNT,OAAQqB,KAAKhB,MAAML,SAE3B,6BACE,yBAAKV,UAAU,gBACZ+B,KAAKhB,MAAMC,QAAQgB,IAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACE5B,iBAAkB,EAAKA,iBACvBF,GAAI8B,EAAO9B,GACX+B,IAAKD,EAAO9B,GACZD,MAAO+B,EAAO/B,iB,GAlDZiC,cCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.de2845ce.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n  <div className=\"card img-container hover\">\n    <img src={props.image} id={props.id}\n      onClick={() => props.shuffleScoreCard(props.id) } className=\"shuffleScore\" alt={props.name}/>\n  </div>\n  );\n}\nexport default FriendCard;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Score = props => (\r\n  <div className=\"gameScore\">\r\n    <h3 className = \"score\">Your Score: {props.total}</h3>\r\n    <h3 className=\"status\">Finster Says: {props.status}</h3>\r\n    </div>\r\n);\r\n\r\nexport default Score;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"container\">\r\n      <nav class=\"navbar navbar-light\">\r\n        <a class=\"navbar-brand\" id=\"navbar\" href=\"/\">RECESS CLICKY GAME</a>\r\n      </nav>\r\n      <div className=\"jumbotron\">\r\n        <h1>Play Clicky Game!</h1>\r\n        <p>\r\n          Click on an image to earn points, but don't click on the same image more than once! \r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Score from \"./components/Score\";\nimport NavBar from \"./components/NavBar\";\nimport friends from \"./friends.json\";\nimport \"./index.css\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clickedFriendIds: [],\n    score: 0,\n    goal: 12,\n    status: \"\"\n  };\n\n  \n  shuffleScoreCard = id => {\n    let clickedFriendIds = this.state.clickedFriendIds;\n    if(clickedFriendIds.includes(id)) {\n      this.setState ({ clickedFriendIds: [], score: 0, status: \"Game Over!\"});\n  \n    }\n\n    else {\n      clickedFriendIds.push(id)\n      if(clickedFriendIds.length === 12) {\n        this.setState({score: 12, status: \"You Won!\", clickedFriendIds: []});\n        console.log('You Win');\n        return;\n      }\n\n       this.setState({ friends, clickedFriendIds, score: clickedFriendIds.length, status: \" \" });\n       for (let i = friends.length - 1; i > 0; i--) {\n         let j = Math.floor(Math.random() * (i + 1));\n         [friends[i], friends[j]] = [friends[j], friends[i]];\n       }\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <NavBar />\n        <Score total={this.state.score}\n                goal={12}\n                status={this.state.status}\n                />\n        <div>\n          <div className=\"card-wrapper\">\n            {this.state.friends.map(friend => (\n              <FriendCard\n                shuffleScoreCard={this.shuffleScoreCard}\n                id={friend.id}\n                key={friend.id}\n                image={friend.image}\n              />\n            ))}\n          </div>\n        </div>\n      </>\n\n    );\n  }\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}